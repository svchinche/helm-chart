{{- if .Values.mongodb.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-import-dump"
  labels:
    app: {{ template "name" . }}
    release: {{ .Release.Name }}
    component: mongodb
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      restartPolicy: OnFailure
      containers:
      - name: dump-import-job
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command:
        - 'sh'
        - '-c'
        - 'sh /scripts/setup.sh'
        volumeMounts:
        - name: mongodb-import-dump-script
          mountPath: "/scripts"
        - name: mongodb-import-dump
          mountPath: "/dump"
      volumes:
      - name: mongodb-import-dump-script
        configMap:
          name: {{ template "name" . }}-import-dump-script
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: mongodb-import-dump
    spec:
      accessModes:
      {{- range .Values.persistence.accessModes }}
      - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
{{- else }}
  volumes:
  - name: dbvolumes
    emptyDir: {}
{{- end }}
{{- end }}